version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-eks: circleci/aws-eks@0.2.0
  kubernetes: circleci/kubernetes@0.3.0

jobs:
  lint-code:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            make install
      - run:
          name: Lint Code
          command: |
            make lint

  # setup-job:
  #   docker:
  #     - image: cimg/base:stable
  #   steps:
  #     - aws-eks/setup

  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:      
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          show-eksctl-command: true
          verbose: 3
          node-type: t2.micro
          nodes-max: 2
          ssh-access: true
          ssh-public-key: 'Ansible-Ec2.pem'
         

workflows:
    example-workflow:
      jobs:
        # - lint-code
        # - aws-ecr/build-and-push-image:             
        #     aws-access-key-id: AWS_ACCESS_KEY_ID 
        #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY 
        #     region: AWS_REGION 
        #     account-url: AWS_ECR_ACCOUNT_URL
        #     create-repo: true 
        #     dockerfile: Dockerfile 
        #     path: .             
        #     repo: capstone         
        #     requires: [ lint-code ]  

        # - setup-job
        - create-cluster:
            cluster-name: capstoneCluster

        # - aws-eks/update-container-image:
        #     show-kubectl-command: true 
        #     cluster-name: capstoneCluster 
        #     container-image-updates: CONTAINER_NAME_1=524381496777.dkr.ecr.us-east-1.amazonaws.com/capstone:latest 