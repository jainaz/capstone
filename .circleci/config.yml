version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint-code:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            make install
      - run:
          name: Lint Code
          command: |
            make lint
    
  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string

    steps:
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          show-eksctl-command: true
          verbose: 3
          node-type: t2.micro
          nodes-max: 2
          ssh-access: true
          ssh-public-key: 'Ansible-Ec2'
          aws-region: us-east-1
          zones: us-east-1a,us-east-1b

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region:  $AWS_REGION
      - run:
          command: |
            kubectl get services -o wide
            kubectl get nodes -o wide
            kubectl get pods --all-namespaces -o wide
            kubectl describe pods
            kubectl get svc
            kubectl describe configmap -n kube-system aws-auth
            kubectl get roles --all-namespaces
            kubectl get deployment

          name: Test cluster


workflows:
  default:
    jobs:
      # - lint-code
      # - aws-ecr/build-and-push-image:             
      #     aws-access-key-id: AWS_ACCESS_KEY_ID 
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY 
      #     region: AWS_REGION 
      #     account-url: AWS_ECR_ACCOUNT_URL
      #     create-repo: true 
      #     dockerfile: Dockerfile 
      #     path: .             
      #     repo: capstone         
      #     requires: [ lint-code ]  
      # - create-cluster:
      #     cluster-name: eks-capstone      
      #     requires: [ aws-ecr/build-and-push-image ]
      - test-cluster:
          cluster-name: eks-capstone
          # requires:
          #   - create-cluster
      - aws-eks/delete-cluster:
          cluster-name: eks-capstone
          requires:
            - test-cluster